import{r,d as ge,j as e,N as Ye}from"./index-kPzU05gx.js";import{a as f}from"./api-p_bhudRe.js";import{S as X,a as Te,b as Ve,D as q,c as Re,d as $e,e as qe,f as w,g as de,h as Be,i as Ue,j as ze,k as me}from"./Styles-CGctwYhX.js";import{M as B}from"./index-DmsyNvo6.js";import{B as x}from"./context-Cu6KQni0.js";import{D as Le}from"./index-BUWDoS_L.js";import{T as We}from"./index-Bg0REs51.js";import{s as I}from"./index-DkzRl__G.js";import{m as h}from"./index-BfF3jSoh.js";import{h as N}from"./moment-gy9AvL1k.js";import{R as Ge}from"./index-BHFLF1lE.js";import{H as Je}from"./Holidays-CC6NIhX_.js";import{U as Ke,P as Qe}from"./registerModal-BemuQGxC.js";import Xe from"./index-DOPZgS7U.js";import{A as Ze}from"./AddClientsModal-CZH8hJFG.js";import{C as ue}from"./index-CsRKGip1.js";import{s as ea}from"./commonMailDomains-C8uuVB4t.js";import{F as pe}from"./index-COTnBvfG.js";import{c as aa}from"./AntdIcon-rDAQJIgd.js";import{t as oa,C as sa,o as ra}from"./useSize-Dir-JjEK.js";import{u as ta}from"./render-CJmks47J.js";import{g as na}from"./PurePanel-DZZoC6Qu.js";import{S as U}from"./index-CDd_3z3j.js";import{I as Z}from"./index-DdU0LtvV.js";import{C as ia}from"./index-BxaDw8tE.js";const{Option:ee}=U;function fe(g){return g&&g.type&&(g.type.isSelectOption||g.type.isSelectOptGroup)}const la=(g,Y)=>{var l;const{prefixCls:S,className:c,popupClassName:T,dropdownClassName:y,children:v,dataSource:_}=g,C=oa(v);let D;C.length===1&&r.isValidElement(C[0])&&!fe(C[0])&&([D]=C);const k=D?()=>D:void 0;let H;C.length&&fe(C[0])?H=v:H=_?_.map(u=>{if(r.isValidElement(u))return u;switch(typeof u){case"string":return r.createElement(ee,{key:u,value:u},u);case"object":{const{value:b}=u;return r.createElement(ee,{key:b,value:b},u.text)}default:return}}):[];const{getPrefixCls:E}=r.useContext(sa),O=E("select",S),[d]=ta("SelectLike",(l=g.dropdownStyle)===null||l===void 0?void 0:l.zIndex);return r.createElement(U,Object.assign({ref:Y,suffixIcon:null},ra(g,["dataSource","dropdownClassName"]),{prefixCls:O,popupClassName:T||y,dropdownStyle:Object.assign(Object.assign({},g.dropdownStyle),{zIndex:d}),className:aa(`${O}-auto-complete`,c),mode:U.SECRET_COMBOBOX_MODE_DO_NOT_USE,getInputElement:k}),H)},z=r.forwardRef(la),ca=na(z);z.Option=ee;z._InternalPanelDoNotUseOrYouWillBeFired=ca;const da=z,Ya=({isModalVisible:g,setIsModalVisible:Y,currentAppointment:l,handleClose:S})=>{const[c,T]=r.useState(null),[y,v]=r.useState(null),[_,C]=r.useState(""),[D,k]=r.useState(!1),[H,E]=r.useState(!1),{authData:O}=ge(),d=O.companyID,u=()=>{E(!0)},b=()=>{k(!1)},V=async()=>{try{const t=await f.delete(`/agendamentos/${l.id}`);t.data&&t.data.success?(I.success({message:"Agendamento excluído com sucesso!"}),b(),S()):h.error("Erro ao excluir o agendamento.")}catch(t){console.error("Erro ao excluir o agendamento",t),h.error("Erro ao excluir o agendamento")}},L=()=>{E(null),T(null),v(null)},R=async()=>{try{const t=await f.put(`/agendamentos/${l.id}`,{status:1});t.data&&t.data.success?I.success({message:"Agendamento confirmado com sucesso!"}):I.error({message:"Erro ao confirmar o agendamento."})}catch(t){console.error("Erro ao confirmar o agendamento",t),h.error("Erro ao confirmar o agendamento")}S()},ae=async()=>{try{const t=await f.put(`/agendamentos/${l.id}`,{status:2});t.data&&t.data.success?I.success({message:"Agendamento cancelado com sucesso!"}):h.error("Erro ao cancelar o agendamento.")}catch(t){console.error("Erro ao cancelar o agendamento",t),h.error("Erro ao cancelar o agendamento")}S()},$=async()=>{if(!c||!y){I.error({message:"Por favor, selecione a data e horário para reagendar."});return}try{const t=await f.put(`/agendamentos/${l.id}`,{data:c.format("DD/MM/YYYY"),horario:y.format("HH:mm")});t.data&&t.data.success?(I.success({message:"Agendamento reagendado com sucesso!"}),L()):h.error("Erro ao reagendar.")}catch(t){console.error("Erro ao reagendar",t),h.error("Erro ao reagendar")}S()},W=(t,P)=>{I[t]({message:P})};return r.useEffect(()=>{(async()=>{if(d)try{const P=await f.get(`/companies/${d}`);C(P.data.nome)}catch(P){console.error("Erro ao buscar nome do consultório:",P),W("error","Erro ao buscar nome do consultório.")}})()},[d]),e.jsxs(e.Fragment,{children:[e.jsxs(B,{title:"O que você gostaria de fazer com este agendamento?",open:g,onCancel:S,footer:[e.jsxs(X,{children:[e.jsx(x,{className:"button-orange modal-btn",onClick:u,children:"Reagendar"},"reschedule"),e.jsx(x,{type:"primary",className:"button-green modal-btn",onClick:R,children:"Confirmar"},"submit"),e.jsx(x,{className:"button-red modal-btn",onClick:ae,children:"Cancelar Agendamento"},"cancelAppointment")]})],children:[l&&e.jsx(Te,{children:e.jsxs("p",{children:[e.jsx("b",{children:"Nome:"})," ",l.nome,e.jsx("br",{}),e.jsx("b",{children:"Telefone:"})," ",l.celular,e.jsx("br",{}),e.jsx("b",{children:"Data:"})," ",l.data,e.jsx("br",{}),e.jsx("b",{children:"Horário:"})," ",l.horario,e.jsx("br",{}),e.jsx("b",{children:"Plano:"})," ",l.planodental]})}),e.jsx(Ve,{children:l&&e.jsx(x,{className:"button-whats modal-btn",onClick:()=>{const t=`Oi, sou do consultório ${_} e estou falando aqui para saber se você deseja confirmar sua consulta agendada para ${l.data} às ${l.horario}?`,P=l.celular.replace(/[^0-9]/g,"");window.open(`https://api.whatsapp.com/send?phone=+55${P}&text=${encodeURIComponent(t)}`,"_blank")},children:"Enviar WhatsApp"},"whatsapp")})]}),e.jsxs(B,{title:"Tem certeza de que deseja excluir este agendamento? 😱",open:D,onOk:V,onCancel:b,okText:"Sim",cancelText:"Não",footer:[e.jsxs(X,{children:[e.jsx(x,{onClick:b,children:"Não"},"cancel"),e.jsx(x,{type:"primary",onClick:V,style:{backgroundColor:"red",borderColor:"red",color:"white"},children:"Sim"},"submit")]})],children:[e.jsx(q,{}),e.jsx("p",{children:"Após esta ação você não poderá recuperar os dados desse agendamento!"}),e.jsx("p",{children:"Caso seja um novo cliente, seus dados continuaram salvos no Menu Clientes."}),e.jsx(q,{})]}),e.jsxs(B,{title:"Reagendar Agendamento ⚠️",open:H,onCancel:()=>E(!1),footer:[e.jsxs(X,{children:[e.jsx(x,{onClick:()=>E(!1),children:"Voltar"},"back"),e.jsx(x,{type:"primary",onClick:$,children:"Salvar Reagendamento"},"submit")]})],children:[e.jsx("p",{children:"Como administrador da clinica você pode reagendar para qualquer horário, portanto certifique-se de que jé não existe alguem para a data e horários selecionados !"}),e.jsx(q,{}),e.jsxs(Re,{children:[e.jsx(Le,{format:"DD/MM/YYYY",value:c,onChange:T}),e.jsx(We,{format:"HH:mm",value:y,onChange:v,minuteStep:15})]}),e.jsx(q,{})]})]})},{Option:he}=U,{TextArea:ma}=Z,Ta=({isModalAgendaVisible:g,handleCancel:Y,start:l,end:S})=>{const[c]=pe.useForm(),[T,y]=r.useState(!1),[v,_]=r.useState([]),[C,D]=r.useState([]),[k,H]=r.useState([]),[E,O]=r.useState([]),[d,u]=r.useState(null),[b,V]=r.useState(!1),[L,R]=r.useState([]),[ae,$]=r.useState(null),[W,t]=r.useState([]),[P,oe]=r.useState(!1),[xe,G]=r.useState(!1),[J,ye]=r.useState(null),[be,je]=r.useState(!1),{authData:F}=ge(),M=F.companyID,Se=F.userSpecialties||[],[se,re]=r.useState([]),Ce=a=>{const o=a.target.value,i=ea(o);re(i)},De=a=>{c.setFieldsValue({email:a}),re([])},Ee=async a=>{if(a.length<4){R([]);return}try{if(M){const s=(await f.get("/clients",{params:{company_id:M}})).data.filter(n=>n.nome.toLowerCase().includes(a.toLowerCase())).map(n=>({label:n.nome,value:n.nome,data:n}));R(s)}else console.error("Company ID not found in context")}catch(o){console.error("Erro ao buscar pacientes",o),h.error("Erro ao buscar pacientes")}},Pe=(a,o)=>{var i,s,n;$(o==null?void 0:o.data),c.setFieldsValue({email:(i=o.data)==null?void 0:i.client_email,celular:(s=o.data)==null?void 0:s.celular,planodental:(n=o.data)==null?void 0:n.planodental})},te=new Je;te.init("BR");const Me=a=>te.getHolidays(a.year()).some(i=>{const s=new Date(i.date);return s.getDate()===a.date()&&s.getMonth()===a.month()&&s.getFullYear()===a.year()}),ne={Segunda:1,Terça:2,Quarta:3,Quinta:4,Sexta:5,Sábado:6,Domingo:0};r.useEffect(()=>{l&&c.setFieldsValue({data:N(l),horario:N(l)}),S&&c.setFieldsValue({end_time:N(S)})},[l,S,c]),r.useEffect(()=>{d&&(async()=>{try{const o=await f.get(`/dias-semanais?professional_id=${d}`);_(o.data)}catch(o){console.error("Erro ao buscar dias da semana",o)}})()},[d]);const we=()=>{Ye("/upgrade"),G(!1)},ie=()=>{G(!1)},ve=a=>{const o=a.day(),i=v.find(s=>ne[s.dia]===o);return!i||!i.ativo?!0:Me(a)},K=(a,o)=>{if(!a||b)return[];const i=a.day(),s=v.find(j=>ne[j.dia]===i),n=[];if(!s||!s.ativo)return[...Array(24).keys()];const p=s.startam?parseInt(s.startam.split(":")[0],10):0,m=s.endam?parseInt(s.endam.split(":")[0],10):11,A=s.startpm?parseInt(s.startpm.split(":")[0],10):12,Fe=s.endpm?parseInt(s.endpm.split(":")[0],10):23;for(let j=0;j<24;j++)(j<p||j>=m&&j<A||j>Fe)&&n.push(j);return o.forEach(j=>{n.includes(j)||n.push(j)}),n},ke=async a=>{const o=a.format("DD/MM/YYYY");if(d&&!b)try{const s=(await f.get("/agendamentos",{params:{data:o,professional_id:d}})).data.map(n=>N(n.horario,"HH:mm").hour());H(s)}catch(i){console.error("Erro ao buscar horários agendados",i),h.error("Erro ao buscar horários agendados")}D(K(a,k))};r.useEffect(()=>{c.getFieldValue("data")&&D(K(c.getFieldValue("data"),k))},[b,k,c]);const He=async a=>{y(!0);try{const o={nome:a.nome,client_email:a.email,celular:a.celular.replace(/\D/g,""),planodental:a.planodental,company_id:M},i=a.data.format("DD/MM/YYYY"),s=a.horario.format("HH:mm"),n=a.end_time.format("HH:mm"),p={...a,data:i,horario:s,end_time:n,professional_id:d,company_id:M};let m=await f.get(`/clients/email/${o.client_email}?company_id=${o.company_id}`).catch(A=>A.response);if(m&&m.status===404&&(m=await f.post("/clients",o)),m&&m.data&&m.data.id){p.client_id=m.data.id;const A=await f.post("/agendamentos",p);A.data&&A.data.error?h.error(A.data.error):(I.success({message:"Agendamento feito com sucesso!"}),c.resetFields(),Q())}else throw console.error("Erro na resposta do cliente:",m),new Error(m.data.message||"Erro ao criar ou recuperar o cliente.")}catch(o){console.error("Erro no processo de agendamento:",o),h.error(o.message||"Erro ao enviar o agendamento")}finally{y(!1)}},[Ie,le]=r.useState([]);r.useEffect(()=>{(async()=>{if(!d){le([]);return}try{const i=(await f.get(`/disabledDates?professional_id=${d}`)).data.map(s=>({date:N(s.date,"DD/MM/YYYY"),allDay:s.allday,startTime:s.starttime,endTime:s.endtime}));le(i)}catch(o){console.error("Erro ao buscar datas desabilitadas",o)}})()},[d]);const Ae=a=>{if(b)return!1;const o=Ie.find(i=>a.isSame(i.date,"day"));return a&&(a<N().startOf("day")||ve(a)||o&&o.allDay)},Q=()=>{c.resetFields(["data","horario","nome","email","celular","planodental","motivo","end_time"]),V(!1),D([]),H([]),u(null),R([]),$(null),Y()};r.useEffect(()=>{(async()=>{try{y(!0);const o=await f.get(`/professionals?company_id=${M}`);if(o.status!==200)throw new Error("Falha ao buscar dados dos profissionais");const s=ue.AES.decrypt(o.data,"%A0533266q6td9g*"),n=JSON.parse(s.toString(ue.enc.Utf8));if(O(n),n.length===1){const p=n[0].id;u(p);const m=await ce(p);t(m),c.setFieldsValue({professional:p,planodental:""})}}catch(o){console.error("Error fetching professionals:",o),h.error("Erro ao buscar dados dos profissionais")}finally{y(!1)}})()},[M]);const ce=async a=>{try{const o=await f.get(`/professionals/${a}/planos`);if(o.status===200)return o.data;throw new Error("Falha ao buscar planos de saúde do profissional")}catch(o){return console.error("Erro ao buscar planos de saúde",o),h.error("Erro ao buscar planos de saúde"),[]}},Ne=()=>{if(E.length>=J){G(!0);return}u(null),oe(!0)},_e=()=>{oe(!1),u(null)};r.useEffect(()=>{(async()=>{if(M&&F.authToken){y(!0);try{const i=(await f.get(`/companies/${M}`,{headers:{Authorization:`Bearer ${F.authToken}`}})).data.service_id,s=await f.get(`/service_details/${i}`,{headers:{Authorization:`Bearer ${F.authToken}`}});ye(s.data.persons)}catch(o){console.error("Erro ao buscar o número máximo de profissionais:",o),h.error("Erro ao buscar informações do serviço")}finally{y(!1)}}})()},[M,F.authToken]);const Oe=()=>{Q(),Y()};return e.jsxs($e,{title:"Agendar Consulta Para Paciente 👩‍⚕️",open:g,onCancel:Oe,footer:[e.jsx(x,{onClick:Q,children:"Cancelar"},"back"),e.jsx(x,{type:"primary",onClick:()=>c.submit(),children:"Agendar"},"submit")],style:{top:"5%"},children:[e.jsxs(pe,{form:c,name:"agendamento",layout:"vertical",onFinish:He,children:[e.jsx(qe,{children:e.jsx(w,{name:"nome",rules:[{required:!0,message:"Por favor, insira o nome do paciente!"}],children:e.jsx(da,{placeholder:"🔍 Nome do paciente",onSearch:Ee,onSelect:Pe,options:L,style:{width:"100%"}})})}),e.jsx(w,{name:"email",label:"E-mail",rules:[{required:!0,message:"Por favor, insira seu e-mail!"},{type:"email",message:"Por favor, insira um e-mail válido!"}],children:e.jsx(Z,{placeholder:"Seu e-mail",onChange:Ce})}),se.length>0&&e.jsx("div",{style:{marginTop:"0.5rem",background:"#f7f7f7",padding:"0.5rem"},children:se.map((a,o)=>e.jsx("div",{onClick:()=>De(a),style:{cursor:"pointer",padding:"0.5rem"},children:a},o))}),e.jsx(de,{showSearch:!0,style:{width:200,marginBottom:20},placeholder:"Selecione um profissional",optionFilterProp:"children",onChange:async a=>{if(a){u(a);const o=await ce(a);t(o),c.setFieldsValue({planodental:""})}},filterOption:(a,o)=>o.children.toLowerCase().indexOf(a.toLowerCase())>=0,value:d,children:E.map(a=>e.jsx(he,{value:a.id,children:a.nome},a.id))}),e.jsxs(x,{style:{margin:"0 10px 10px 10px"},type:"primary",onClick:Ne,children:[e.jsx(Ke,{}),"Adicionar Profissional"]}),e.jsx(Qe,{isVisible:P,onClose:_e,initialData:d,userSpecialties:Se}),e.jsx(w,{name:"ignoreDisabledHours",valuePropName:"checked",children:e.jsx(ia,{onChange:a=>V(a.target.checked),children:"Ignorar Horários Desabilitados e ja Agendados"})}),e.jsx(Be,{children:e.jsx(w,{name:"data",label:"Data",rules:[{required:!0,message:"Por favor, selecione uma data!"}],children:e.jsx(Ue,{format:"DD/MM/YYYY",disabledDate:Ae,onChange:ke},b?"ignore":"normal")})}),e.jsxs(ze,{children:[e.jsx(w,{name:"horario",label:"Horário de Início",rules:[{required:!0,message:"Por favor, selecione um horário!"}],children:e.jsx(me,{format:"HH:mm",minuteStep:5,disabledTime:()=>({disabledHours:()=>K(c.getFieldValue("data"),k)})})}),e.jsx(w,{name:"end_time",label:"Horário Final",rules:[{required:!0,message:"Por favor, selecione o horário final!"}],children:e.jsx(me,{format:"HH:mm",minuteStep:5,disabledTime:()=>{const a=c.getFieldValue("horario"),o=a?N(a,"HH:mm"):null;return{disabledHours:()=>{const n=[];for(let p=0;p<24;p++)o&&p<o.hour()&&n.push(p);return n},disabledMinutes:n=>{const p=[];if(o&&n===o.hour())for(let m=0;m<=o.minute();m++)p.push(m);return p}}}})})]}),e.jsx(w,{name:"planodental",rules:[{required:!0,message:"Por favor, selecione uma forma de pagamento!"}],children:e.jsx(de,{placeholder:"Forma de pagamento",children:W.map(a=>e.jsx(he,{value:a.nome,children:a.nome},a.id))})}),e.jsx(w,{name:"celular",label:"Celular",rules:[{required:!0,message:"Por favor, insira seu número de celular!"}],children:e.jsx(Ge,{mask:"(99) 9 9999-9999",placeholder:"(99) 9 9999-9999",children:a=>e.jsx(Z,{...a,type:"tel"})})}),e.jsx(w,{name:"motivo",label:"Motivo da Consulta",rules:[{required:!0,message:"Por favor, descreva o motivo da consulta!"}],children:e.jsx(ma,{placeholder:"Descreva o motivo da consulta em poucas palavras",rows:2,maxLength:90})})]}),e.jsxs(B,{title:"Limite de Profissionais Atingido",open:xe,onCancel:ie,footer:[e.jsx(x,{onClick:ie,children:"Cancelar"},"back"),e.jsx(x,{type:"primary",onClick:we,children:"Fazer Upgrade"},"submit")],children:[e.jsxs("p",{children:["Seu plano contratado só permite até ",J," profissionais. Caso sua clínica esteja crescendo, faça um upgrade do seu plano."]}),e.jsx(Xe,{maxProfessionals:J})]}),e.jsx(Ze,{isModalAddClientsVisible:be,onCloseAddClients:()=>je(!1)})]})};export{Ya as A,Ta as S};
